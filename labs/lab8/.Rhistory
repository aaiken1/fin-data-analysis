}
prices_sim <- cbind(price, 1:(12*5))
colnames(prices_sim) <- c("Price","Month")
class(prices_sim)
prices_sim <- as.tibble(prices_sim)
prices_sim %>% ggplot(aes(Month,Price)) +
geom_line() +
labs(title="Apple (AAPL) Simulation of 5 Years of Monthly Prices") +
theme_bw()
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01")
library(tidyverse)
library(lubridate)
library(tidyquant)
library(glue)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01")
View(stocks)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
View(stocks)
stocks <- as.xts(stocks)
View(stocks)
View(stocks)
stocks <- as.xts(stocks, order.by = date)
View(stocks)
stocks <- stocks %>%
mutuate(date = ymd(date))
stocks <- stocks %>%
mutate(date = ymd(date))
stocks <- as.xts(stocks, order.by = date)
View(stocks)
stocks <- stocks %>%
mutate(date = ymd(date))
stocks <- as.xts(stocks)
stocks <- stocks %>%
mutate(date = ymd(date))
stocks <- as.xts(stocks, order.by = date)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
stocks <- stocks %>%
mutate(date = ymd(date))
stocks <- as.xts(stocks, order.by = date)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
stocks <- as.xts(stocks, order.by = as.POSIXct(date))
stocks <- xts(stocks[,-1], order.by = as.POSIXct(date))
stocks <- xts(stocks[,-1], order.by = date)
stocks <- xts(stocks[,-1], order.by = stocks$date)
stocks <- as.xts(stocks[,-1], order.by = stocks$date)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
stocks <- as.xts(stocks[,-1], order.by = stocks$date)
stocks <- as.xts(stocks[,-1], order.by = stocks$date)
tickers <- c("FB", "AAPL", "AMZN", "NFLX", "GOOG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
stocks <- as.xts(stocks[,-1], order.by = stocks$date)
class(stocks)
stocks_monthly <- to.monthly(stocks)
View(stocks_monthly)
View(stocks)
View(stocks)
stocks_monthly <- to.monthly(stocks, indexAt = "last", OHLC = FALSE))
stocks_monthly <- to.monthly(stocks, indexAt = "last", OHLC = FALSE)
View(stocks_monthly)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
stocks  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
View(stocks)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
select(symbol, date, adjusted) %>%
spread(symbol, adjusted)
etfs <- as.xts(etfs[,-1], order.by = etfs$date)
class(etfs)
etfs_monthly <- to.monthly(etfs, indexAt = "last", OHLC = FALSE)
View(etfs_monthly)
lag(etfs_monthly, k = 1)
etfs_monthly <- lag(etfs_monthly, k = 1)
View(etfs_monthly)
etfs_monthly <- xts::lag(etfs_monthly, k = 1)
etfs_monthly <- xts::lag.xts(etfs_monthly, k = 1)
View(etfs_monthly)
etfs_monthly <- to.monthly(etfs, indexAt = "last", OHLC = FALSE)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
View(etfs_monthly_lag)
View(etfs_monthly)
View(etfs_monthly_lag)
View(etfs_monthly_lag)
View(etfs_monthly)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
etfs_monthly_lag <- etfs_monthly_lag %>%
rename_all(paste0(x,"_lag"))
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
etfs_monthly_lag <- etfs_monthly_lag %>%
rename_all(function(x) paste0(x,"_lag"))
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag)
cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly <- cbind(etfs_monthly, etfs_monthly_lag)
View(etfs_monthly)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly <- to.monthly(etfs, indexAt = "last", OHLC = FALSE)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly <- cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly$AGG.ret = AGG/Agg.lag - 1
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly <- to.monthly(etfs, indexAt = "last", OHLC = FALSE)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly_combined <- cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_combined$AGG.ret = etfs_monthly_combined$AGG/etfs_monthly_combined$Agg.lag - 1
View(etfs_monthly_combined)
etfs_monthly <- to.monthly(etfs, indexAt = "last", OHLC = FALSE)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly_combined <- cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_combined$AGG.ret = etfs_monthly_combined$AGG/etfs_monthly_combined$AGG.lag - 1
View(etfs_monthly_combined)
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly_combined <- cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_combined$SPY.ret = etfs_monthly_combined$SPY/etfs_monthly_combined$SPY.lag - 1
etfs_monthly_combined$EFA.ret = etfs_monthly_combined$EFA/etfs_monthly_combined$EFA.lag - 1
etfs_monthly_combined$IJS.ret = etfs_monthly_combined$IJS/etfs_monthly_combined$IJS.lag - 1
etfs_monthly_combined$EEM.ret = etfs_monthly_combined$EEM/etfs_monthly_combined$EEM.lag - 1
etfs_monthly_combined$AGG.ret = etfs_monthly_combined$AGG/etfs_monthly_combined$AGG.lag - 1
etfs_monthly_lag <- xts::lag.xts(etfs_monthly, k = 1)
names(etfs_monthly_lag) <- paste(c("AGG.lag", "EEM.lag", "EFA.lag", "IJS.lag", "SPY.lag"))
etfs_monthly_combined <- cbind(etfs_monthly, etfs_monthly_lag)
etfs_monthly_combined$SPY.ret = etfs_monthly_combined$SPY/etfs_monthly_combined$SPY.lag - 1
etfs_monthly_combined$EFA.ret = etfs_monthly_combined$EFA/etfs_monthly_combined$EFA.lag - 1
etfs_monthly_combined$IJS.ret = etfs_monthly_combined$IJS/etfs_monthly_combined$IJS.lag - 1
etfs_monthly_combined$EEM.ret = etfs_monthly_combined$EEM/etfs_monthly_combined$EEM.lag - 1
etfs_monthly_combined$AGG.ret = etfs_monthly_combined$AGG/etfs_monthly_combined$AGG.lag - 1
summary(etfs_monthly_combined)
etf_monthly_rets <- Return.calculate(etf_monthly, method = "discrete")
etf_monthly_rets <- Return.calculate(etf_monthly, method = "discrete")
etf_monthly_rets <- Return.calculate(etfs_monthly, method = "discrete")
View(etf_monthly_rets)
View(etf_monthly_rets)
Return.annualized(etfs_monthly, scale = 12, geometric = TRUE)
Return.annualized(etfs_monthly_ret, scale = 12, geometric = TRUE)
etfs_monthly_rets <- Return.calculate(etfs_monthly, method = "discrete")
Return.annualized(etfs_monthly_ret, scale = 12, geometric = TRUE)
Return.annualized(etfs_monthly_rets, scale = 12, geometric = TRUE)
SharpeRatio.annualized(etfs_monthly_rets, Rf = 0.0019, scale = 12, geometric = TRUE)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
type       = "arithmetic")
library(tidyverse)
library(lubridate)
library(tidyquant)
library(glue)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
type       = "arithmetic")
View(etfs)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
type       = "arithmetic")
View(etfs)
View(etfs)
etfs <- etf %>%
spread(symbol, monthly.returns)
etfs <- etfs %>%
spread(symbol, monthly.returns)
View(etfs)
etfs <- as.xts(etfs[,-1], order.by = etfs$date)
View(etfs)
View(etfs)
etfs_rolling_corr <- etfs %>%
tq_transmute_xy(x          = SPY,
y          = EEM,
mutate_fun = runCor,
n          = 6,
col_rename = "rolling.corr.6")
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2010-01-01") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
type       = "arithmetic")
etfs <- etfs %>%
spread(symbol, monthly.returns)
etfs_rolling_corr <- etfs %>%
tq_transmute_xy(x          = SPY,
y          = EEM,
mutate_fun = runCor,
n          = 6,
col_rename = "rolling.corr.6")
View(etfs_rolling_corr)
etfs_rolling_corr <- etfs %>%
tq_transmute_xy(x          = SPY,
y          = EEM,
mutate_fun = runCor,
n          = 6,
col_rename = "rolling.corr.6")
etfs_rolling_corr %>%
ggplot(aes(x = date, y = rolling.corr.6, color = symbol)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(size = 1) +
labs(title = "Six Month Rolling Correlations Between SPY and EEM",
x = "", y = "Correlation", color = "") +
theme_tq() +
scale_color_tq()
etfs_rolling_corr <- etfs %>%
tq_transmute_xy(x          = SPY,
y          = EEM,
mutate_fun = runCor,
n          = 6,
col_rename = "rolling.corr.6")
etfs_rolling_corr %>%
ggplot(aes(x = date, y = rolling.corr.6)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(size = 1) +
labs(title = "Six Month Rolling Correlations Between SPY and EEM",
x = "", y = "Correlation", color = "") +
theme_tq() +
scale_color_tq()
etfs_xts <- as.xts(etfs[,-1], order.by = etfs$date)
port_spec <- portfolio.spec(assets=names(etfs_xts))
library(tidyverse)
library(lubridate)
library(tidyquant)
library(glue)
library(PortfolioAnalytics)
install.packages("PortfolioAnalytics")
library(tidyverse)
library(lubridate)
library(tidyquant)
library(glue)
library(PortfolioAnalytics)
library(PerformanceAnalytics)
port_spec <- portfolio.spec(assets=names(etfs_xts))
View(port_spec)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.10,
max = 0.5)
port_spec <- add.objective(portfolio = port_spec,
type='return',
name='mean')
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
library(tidyverse)
library(xts)
library(tidyquant)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(ROI)
install.packages("ROI")
install.packages("ROI.plugin.quadprog")
install.packages("roi.plugin.glpk")
install.packages("DEoptim")
library(tidyverse)
library(xts)
library(tidyquant)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(ROI)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
install.packages("ROI.plugin.glpk")
library(tidyverse)
library(xts)
library(tidyquant)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(ROI)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
library(DEoptim)
library(tidyverse)
library(xts)
library(tidyquant)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(ROI)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
library(DEoptim)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
View(maxSR.port)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
print(maxSR.port)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
port_spec <- add.objective(portfolio = port_spec, type = "return", name = "mean")
port_spec <- add.objective(portfolio = port_spec, type = "risk", name = "StdDev")
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
print(maxSR.port)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
print(maxSR.port)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
port_spec <- add.objective(portfolio = port_spec, type = "return", name = "mean")
port_spec <- add.objective(portfolio = port_spec, type = "risk", name = "StdDev")
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
print(maxSR.port)
chart.RiskReward(maxSR.port, risk.col="StdDev", return.col="mean")
meanvar.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
trace = TRUE)
print(meanvar.port)
chart.RiskReward(maxSR.port, risk.col="StdDev", return.col="mean")
meanvar.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
trace = TRUE)
chart.RiskReward(meanvar.port, risk.col="StdDev", return.col="mean")
meanvar.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
trace = TRUE)
chart.RiskReward(meanvar.port, risk.col="StdDev", return.col="mean")
meanvar.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
trace = TRUE)
chart.RiskReward(meanvar.port, risk.col="StdDev", return.col="mean")
meanvar.ef <- create.EfficientFrontier(R = R, portfolio = port_spec, type="mean-StdDev")
meanvar.ef <- create.EfficientFrontier(R = etfs_xts, portfolio = port_spec, type="mean-StdDev")
meanvar.ef <- create.EfficientFrontier(R = etfs_xts, portfolio = port_spec, type = "mean-StdDev")
meanvar.ef <- create.EfficientFrontier(R = etfs_xts, portfolio = port_spec, type = "mean-StdDev")
chart.EfficientFrontier(meanvar.ef, match.col = "StdDev", type = "l", RAR.text = "Sharpe Ratio", pch = 4)
tickers <- c("SPY", "EFA", "IJS", "EEM", "AGG")
etfs  <- tq_get(tickers, get = "stock.prices", from = "2007-01-01") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
type       = "arithmetic")
etfs <- etfs %>%
spread(symbol, monthly.returns)
etfs_rolling_corr <- etfs %>%
tq_transmute_xy(x          = SPY,
y          = EEM,
mutate_fun = runCor,
n          = 6,
col_rename = "rolling.corr.6")
etfs_rolling_corr %>%
ggplot(aes(x = date, y = rolling.corr.6)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(size = 1) +
labs(title = "Six Month Rolling Correlations Between SPY and EEM",
x = "", y = "Correlation", color = "") +
theme_tq() +
scale_color_tq()
etfs_xts <- as.xts(etfs[,-1], order.by = etfs$date)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
port_spec <- add.objective(portfolio = port_spec, type = "return", name = "mean")
port_spec <- add.objective(portfolio = port_spec, type = "risk", name = "StdDev")
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE)
print(maxSR.port)
meanvar.ef <- create.EfficientFrontier(R = etfs_xts, portfolio = port_spec, type = "mean-StdDev")
chart.EfficientFrontier(meanvar.ef, match.col = "StdDev", type = "l", RAR.text = "Sharpe Ratio", pch = 4)
meanvar.ef <- create.EfficientFrontier(R = etfs_xts, portfolio = port_spec, type = "mean-StdDev")
chart.EfficientFrontier(meanvar.ef, match.col = "StdDev", type = "l", RAR.text = "Sharpe Ratio", pch = 4, rf = 0.025/12)
port_spec <- portfolio.spec(assets = names(etfs_xts))
port_spec <- add.constraint(portfolio = port_spec,
type="weight_sum",
min_sum=1,
max_sum=1)
port_spec <- add.constraint(portfolio = port_spec,
type = "box",
min = -0.20,
max = 0.5)
port_spec <- add.objective(portfolio = port_spec, type = "return", name = "mean")
port_spec <- add.objective(portfolio = port_spec, type = "risk", name = "StdDev")
maxSR.port <- optimize.portfolio(R = etfs_xts,
portfolio = port_spec,
optimize_method = "ROI",
maxSR = TRUE,
trace = TRUE,
rf = 0.025/12)
print(maxSR.port)
